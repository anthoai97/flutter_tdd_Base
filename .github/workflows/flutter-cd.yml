# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Flutter CD

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v2
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Check output
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
        
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Cache Grandle modules
        uses: actions/cache@v2.1.7
        env:
          cache-number: ${{ secrets.CACHE_NUMBER }}
        with:
          path: |
            ~/android/.gradle
            ~/.gradle/cache
            # ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ env.cache-number }}-${{ hashFiles('android/build.gradle') }}-${{ hashFiles('android/app/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ env.cache-name }}-${{ hashFiles('android/build.gradle') }}
            ${{ runner.os }}-gradle-${{ env.cache-name }}-
            ${{ runner.os }}-gradle-
            ${{ runner.os }}-

      - name: Cache Flutter modules
        uses: actions/cache@v2.1.7
        env:
          cache-number: ${{ secrets.CACHE_NUMBER }}
        with:
          path: |
            ~/.pub-cache/bin
          key: ${{ runner.os }}-pub-${{ env.cache-number }}-${{ env.flutter_version }}-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-${{ env.flutter_version }}-
            ${{ runner.os }}-pub-
            ${{ runner.os }}-

      - name: Upgrade PATH
        run: export PATH="$PATH":"$HOME/.pub-cache/bin"

      - name: Get flutter dependencies.
        run: |
          flutter --version
          make dependencies
          make easy-location

      - name: Run build runner
        run: make build-runner

      - name: Check for any formatting and statically analyze the code.
        run: make format-analyze

      - name: Run Unit Test
        run: make unit-test

      - name: Build Dev Apk
        run: make build-android-dev

      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_RELEASE_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      
      - name: Upload APK file assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/flutter-apk/app-dev-release.apk
          asset_name: app-dev-release.apk
          asset_content_type: application/zip
